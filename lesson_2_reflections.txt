Q: What happens when you initialize a repository? Why do you need to do it?

A: It recognizes the location and adds hidden files.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?

A: The staging are is middle ground before officially making and commiting a change to record. It allows you to bundle up multiple files that may go together with the option of choosing them out. 

Q: How can you use the staging area to make sure you have one commit per logical change?

A: You can compare what you have in the staging area with what is already committed to see the changes you will be adding and if it is a logical change or too much. You can also compare it to the working directory to see if there are any newer changes for later.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A: Some situations when branches would be helpful would be when you're working in a group and each wants to try a different approach or each is adding a new feature to the main code but adding a few differences. In this case it would sort the history of who and when things were added.

Q: How do the diagrams help you visualize the branch structure?

A: The lay out how the system works and how everything is connected, or in some cases, not connected and why git works the way it does logically.

Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A: Merging two branches together allows you to combine code from two separate files into one while also keeping the additions and deletions consistent between the files. Its like that in the diagram because its taking the content from both points and making it into one.